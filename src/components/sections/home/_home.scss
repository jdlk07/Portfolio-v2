.home-wrapper {
  @import './components/backgroundCircle/backgroundCircle';
  @import './components//typedTextAnimation/typedTextAnimation';

  height: 100vh;
  width: 100%;
  display: flex;
  justify-content: center;
  align-content: center;
  // background: linear-gradient(150deg, #ffffff14 0%, transparent 60%);
  // background-image: url('../../../static/images/gradient-image.png');
  // background-size: cover;
  // background-repeat: no-repeat;
  // background-position: 0% 0%;

  .home-container {
    position: relative;
    height: 100%;
    width: $max-desktop-width;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    // background-color: teal;

    @include mobile {
      width: $max-mobile-width;
    }

    .text-wrapper {
      position: relative;
      z-index: 2;
      margin-top: 13%;
      max-width: 440px;
      overflow: hidden;

      @include mobile {
        margin-top: 23%;
      }

      .header {
        font-size: fontSize(heroHeader);
        font-weight: 500;
        color: color(text1);
        margin: 10px 0 32px 0;

        @include mobile {
          font-size: fontSizeMobile(heroHeader);
          font-weight: 500;
          margin: 10px 0 30px 0;
        }
      }

      .read-more-button {
        $height: 42px;
        $heightMobile: 34px;
        position: relative;
        display: block;
        // padding: 11px 40px;
        height: $height;
        width: 160px;
        text-align: center;
        border-radius: 1px;
        line-height: $height;
        border: 0.5px solid rgba(255, 238, 238, 0.481);
        text-decoration: none;
        cursor: pointer;
        font-size: fontSize(mini);
        color: color(text2);
        text-transform: uppercase;
        margin-top: 32px;
        z-index: 1;

        @include mobile {
          height: $heightMobile;
          width: 125px;
          line-height: $heightMobile;
          font-size: fontSizeMobile(mini);
        }

        &:before {
          content: '';
          position: absolute;
          z-index: -1;
          left: 0;
          top: 0;
          width: 100%;
          height: 100%;
          background-color: color(watermark);
          transition: 250ms;
          transform: scaleX(0);
        }

        &:hover {
          &:before {
            transform: scaleX(1);
          }
        }
      }
    }

    .bottom-text-wrapper {
      width: 100%;
      height: 18%;
      padding-left: 30%;
      overflow: hidden;
      // background-color: lightsalmon;
      // display: inline-block;

      @include mobile {
        height: 28%;
      }

      .bottom-text-container {
        // margin-left: 30%;
        margin-bottom: 10px;
        // height: 50px;
        // width: auto;
        // background-color: plum;
        display: flex;

        @include mobile {
          margin-left: 25%;
        }

        .bottom-text-prefix,
        .bottom-text {
          font-size: fontSize(mini);
          font-weight: 500;
          color: color(text2);

          @include mobile {
            font-size: fontSizeMobile(mini);
            font-weight: 500;
          }
        }

        .bottom-text-prefix {
          opacity: 0.2;
          margin: 0 10px 0 15px;

          @include mobile {
            margin: 0 10px 0 8px;
          }
        }
        .bottom-text {
          text-transform: uppercase;
          opacity: 0.7;
          letter-spacing: 1px;
        }
      }
    }
  }

  $itemsToAnimate: (
    0 'header',
    1 'body-text',
    2 'read-more-button',
    3 'inner-circle',
    4 'bottom-text-container:nth-of-type(1)',
    5 'bottom-text-container:nth-of-type(2)'
  );

  $itemsToTranslate: (0 'header', 1 'body-text', 2 'read-more-button');

  @each $order, $className in $itemsToTranslate {
    .#{$className} {
      transform: translateX(-100%);
    }
  }

  @each $order, $className in $itemsToAnimate {
    .#{$className} {
      transition-duration: 800ms;
      transition-timing-function: $power-ease;
      transition-delay: $order * 250ms;
    }
  }

  .background-circle-wrapper {
    .inner-circle {
      opacity: 0;
      transform: scale(0.6);
    }
  }

  .bottom-text-container {
    opacity: 0;
  }

  &.visible {
    @each $order, $className in $itemsToAnimate {
      .#{$className} {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .background-circle-wrapper {
      .inner-circle {
        opacity: 1;
        transform: scale(1);
      }
    }
  }
}
